{"version":3,"sources":["logo.svg","context/AppContextProvider.jsx","comps/TodoLayout.jsx","comps/TodoInput.jsx","comps/TodoItem.jsx","comps/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","useTotoContext","useContext","AppContextProvider","children","nextid","useRef","inputId","useState","t_id","t_text","t_isComplete","todo","setTodo","todoList","setTodoList","todoInsert","window","alert","current","focus","todoClear","props","onChange","e","target","value","onKeyPress","key","onClick","onDeleteClick","stopPropagation","id","Number","dataset","filter","onCompleteClick","currentTarget","index","findIndex","selected","nextTodos","completeToggle","Provider","TodoLayout","form","className","TodoInput","ref","TodoItem","checked","text","onClickCapture","data-id","TodoList","viewList","map","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6be5b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createContext, useContext, useState, useRef } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const useTotoContext = () => useContext(AppContext);\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n    const nextid = useRef(0);\r\n    const inputId = useRef();\r\n    const [todo, setTodo] = useState({\r\n        t_id: 0,\r\n        t_text: \"오늘의 할일\",\r\n        t_isComplete: false,\r\n    });\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    const onChange = (e) => {\r\n        setTodo({ ...todo, t_text: e.target.value, t_id: nextid.current });\r\n    };\r\n    const todoInsert = () => {\r\n        if (todo.t_text === \"\") {\r\n            window.alert(\"할일을 입력하세요~!!\");\r\n            inputId.current.focus();\r\n            return;\r\n        }\r\n        setTodoList([...todoList, todo]);\r\n        nextid.current++;\r\n        todoClear();\r\n    };\r\n\r\n    const todoClear = () => {\r\n        setTodo({\r\n            t_text: \"\",\r\n            t_id: nextid.current,\r\n            t_isComplete: false,\r\n        });\r\n    };\r\n\r\n    const onClick = () => {\r\n        todoInsert();\r\n    };\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            todoInsert();\r\n        }\r\n    };\r\n    const completeToggle = (id) => {\r\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾기\r\n        const index = todoList.findIndex((todo) => todo.t_id === id);\r\n        const selected = todoList[index]; // 선택한 객체\r\n        const nextTodos = [...todoList]; // 배열을 복사\r\n\r\n        // 기존의 값들을 복사하고, index에 해당하는 checked 값을 덮어쓰기\r\n        nextTodos[index] = {\r\n            ...selected,\r\n            t_isComplete: !selected?.t_isComplete,\r\n        };\r\n        setTodoList(nextTodos);\r\n    };\r\n\r\n    const onCompleteClick = (e) => {\r\n        const t_id = Number(e.currentTarget.dataset.id);\r\n        alert(t_id);\r\n        completeToggle(t_id);\r\n    };\r\n\r\n    const todoDelete = (id) => {\r\n        setTodoList(todoList.filter((todo) => todo?.t_id !== id));\r\n    };\r\n\r\n    const onDeleteClick = (e) => {\r\n        e.stopPropagation();\r\n\r\n        const t_id = Number(e.target.dataset.id);\r\n        todoDelete(t_id);\r\n    };\r\n\r\n    const props = {\r\n        todo,\r\n        todoList,\r\n        onChange,\r\n        onKeyPress,\r\n        onClick,\r\n        onDeleteClick,\r\n        onCompleteClick,\r\n        inputId,\r\n    };\r\n    return <AppContext.Provider value={props}>{children}</AppContext.Provider>;\r\n};\r\nexport default AppContextProvider;\r\n","import React from \"react\";\r\nimport AppContextProvider from \"../context/AppContextProvider\";\r\nimport \"../css/TodoLayout.css\";\r\n\r\nconst TodoLayout = ({ form, children }) => {\r\n    return (\r\n        <AppContextProvider>\r\n            <main className=\"todo-list-template\">\r\n                <div className=\"title\">오늘 할 일</div>\r\n                <section className=\"form-wrapper\">{form}</section>\r\n                <section className=\"todos-wrapper\">{children}</section>\r\n            </main>\r\n        </AppContextProvider>\r\n    );\r\n};\r\n\r\nexport default TodoLayout;\r\n","import { useTotoContext } from \"../context/AppContextProvider\";\r\nimport \"../css/TodoInput.css\";\r\n\r\nfunction TodoInput() {\r\n    const { inputId, todo, onChange, onKeyPress, onClick } = useTotoContext();\r\n    return (\r\n        <div className=\"form\">\r\n            <input\r\n                ref={inputId}\r\n                value={todo.t_text}\r\n                onChange={onChange}\r\n                onKeyPress={onKeyPress}\r\n            />\r\n            <div className=\"insert-button\" onClick={onClick}>\r\n                추가\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoInput;\r\n","import { useTotoContext } from \"../context/AppContextProvider\";\r\nimport \"../css/TodoItem.css\";\r\n\r\nfunction TodoItem({ todo }) {\r\n    const id = todo.t_id;\r\n    const checked = todo.t_isComplete;\r\n    const text = todo.t_text;\r\n\r\n    const { onCompleteClick, onDeleteClick } = useTotoContext();\r\n    return (\r\n        <div\r\n            className=\"todo-item\"\r\n            onClickCapture={onCompleteClick}\r\n            data-id={id}\r\n        >\r\n            <div className=\"remove\" onClickCapture={onDeleteClick} data-id={id}>\r\n                &times;\r\n            </div>\r\n            <div className={`todo-text ${checked && \"checked\"}`}>\r\n                <div>{text}</div>\r\n            </div>\r\n            {checked && <div className=\"check-mark\">&#x2713;</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n","import { useTotoContext } from \"../context/AppContextProvider\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList() {\r\n    const { todoList } = useTotoContext();\r\n    const viewList = todoList.map((todo) => {\r\n        return <TodoItem todo={todo} key={todo.t_id} />;\r\n    });\r\n    return <div>{viewList}</div>;\r\n}\r\n\r\nexport default TodoList;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TodoLayout from \"./comps/TodoLayout\";\nimport TodoInput from \"./comps/TodoInput\";\nimport TodoList from \"./comps/TodoList\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n            <TodoLayout form={<TodoInput />}>\n                <TodoList />\n            </TodoLayout>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}