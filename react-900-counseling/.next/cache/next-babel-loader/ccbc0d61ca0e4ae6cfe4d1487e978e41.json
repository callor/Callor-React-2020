{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\callor\\\\Documents\\\\workspace\\\\React_Project\\\\react-2020\\\\react-900-counseling\\\\components\\\\JoinForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  _s();\n\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: username,\n    1: setUserName\n  } = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setUserName(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault(); // try {\n    //   let data;\n    //   if (newAccount) {\n    //     data = await authService.createUserWithEmailAndPassword(email, password);\n    //   } else {\n    //     data = await authService.signInWithEmailAndPassword(email, password);\n    //   }\n    //   console.log(data);\n    // } catch (error) {\n    //   setError(error.message);\n    // }\n  };\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"\\uC774\\uB984\",\n        required: true,\n        value: username,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"authInput authSubmit\",\n        value: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"QHU/DEwonlUOjI7Z/16SPt/xbvY=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/callor/Documents/workspace/React_Project/react-2020/react-900-counseling/components/JoinForm.jsx"],"names":["React","useState","AuthForm","email","setEmail","username","setUserName","onChange","event","target","name","value","onSubmit","preventDefault","toggleAccount","setNewAccount","prev","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMM,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AADJ,QAEFH,KAFJ;;AAGA,QAAIE,IAAI,KAAK,OAAb,EAAsB;AACpBN,MAAAA,QAAQ,CAACO,KAAD,CAAR;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,UAAb,EAAyB;AAC9BJ,MAAAA,WAAW,CAACK,KAAD,CAAX;AACD;AACF,GATD;;AAUA,QAAMC,QAAQ,GAAG,MAAOJ,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACK,cAAN,GADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbD;;AAcA,QAAMC,aAAa,GAAG,MAAMC,aAAa,CAAEC,IAAD,IAAU,CAACA,IAAZ,CAAzC;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEJ,QAAhB;AAA0B,MAAA,SAAS,EAAC,WAApC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,WAAW,EAAC,OAA7C;AAAqD,QAAA,QAAQ,MAA7D;AAA8D,QAAA,KAAK,EAAET,KAArE;AAA4E,QAAA,QAAQ,EAAEI,QAAtF;AAAgG,QAAA,SAAS,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,WAAW,EAAC,cAA/C;AAAoD,QAAA,QAAQ,MAA5D;AAA6D,QAAA,KAAK,EAAEF,QAApE;AAA8E,QAAA,QAAQ,EAAEE,QAAxF;AAAkG,QAAA,SAAS,EAAC;AAA5G;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,sBAA/B;AAAsD,QAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGU,KAAK,iBAAI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvCD;;GAAMf,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUserName] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setUserName(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // try {\r\n    //   let data;\r\n    //   if (newAccount) {\r\n    //     data = await authService.createUserWithEmailAndPassword(email, password);\r\n    //   } else {\r\n    //     data = await authService.signInWithEmailAndPassword(email, password);\r\n    //   }\r\n    //   console.log(data);\r\n    // } catch (error) {\r\n    //   setError(error.message);\r\n    // }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n        <input name=\"username\" type=\"text\" placeholder=\"이름\" required value={username} onChange={onChange} className=\"authInput\" />\r\n        <input type=\"submit\" className=\"authInput authSubmit\" value=\"등록하기\" />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}