{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, memo, useCallback } from \"react\";\nimport axios from \"axios\";\nconst TextInput = /*#__PURE__*/memo(({\n  value,\n  onChange,\n  name,\n  type,\n  className\n}) => {\n  return /*#__PURE__*/_jsx(\"input\", {\n    type: type,\n    name: name,\n    value: value,\n    required: true,\n    onChange: onChange,\n    className: className\n  });\n});\n\nconst useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst AuthForm = () => {\n  const {\n    0: authError,\n    1: setAuthError\n  } = useState({\n    curriculum: \"\",\n    userName: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const {\n    0: inputBox,\n    1: setInputBox\n  } = useState({\n    uerName: \"\",\n    phone: \"\",\n    email: \"\",\n    curriculum: \"NONE\"\n  });\n  const onChangInputBox = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputBox(_objectSpread(_objectSpread({}, inputBox), {}, {\n      [name]: value\n    }));\n    const msg = e.target.dataset.msg;\n    setAuthError(_objectSpread(_objectSpread({}, authError), {}, {\n      [name]: value === \"NONE\" || !value ? `${msg} 반드시 입력(선택) 해야 합니다` : \"\"\n    }));\n  }, [inputBox]);\n\n  const onSubmit = async event => {\n    console.log(event);\n    event.preventDefault();\n\n    try {\n      setAuthError({\n        curriculum: inputBox.curriculum === \"NONE\" ? \"직종을 선택하세요\" : \"\",\n        email: !inputBox.email ? \"E-mail을 입력하세요\" : \"\",\n        userName: !inputBox.userName ? \"이름을 입력하세요\" : \"\",\n        phone: !inputBox.phone ? \"휴대폰 번호를 입력하세요\" : \"\"\n      });\n      if (inputBox.curriculum === \"NONE\") return false;\n      const body_data = {\n        st_curriculum: inputBox.curriculum,\n        st_name: inputBox.userName,\n        st_tel: inputBox.phone,\n        st_email: inputBox.email\n      };\n      console.log(body_data);\n      /**\r\n       * axios를 사용하여 spring api post로 데이터 전송하기\r\n       * 두번째 파라메터를 null로 선언하고\r\n       * params객체에 json 데이터를 담아서 보낸다\r\n       *\r\n       * spring에서는 vo에 데이터를 받으면 된다.\r\n       */\n\n      axios.post(\"https://api.callor.com/student/insert\", null, {\n        params: body_data\n      }).then(res => {\n        if (res.data) {\n          alert(res.data.st_name + \"님 환영합니다!!!\");\n        }\n      }).catch(error => console.log(error));\n    } catch (error) {\n      alert(error.message);\n      setAuthError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"authContainer\",\n    children: [/*#__PURE__*/_jsx(\"h3\", {\n      children: \"\\uD55C\\uAD6D\\uACBD\\uC601\\uC6D0 \\uC778\\uC7AC\\uAC1C\\uBC1C\\uC6D0\"\n    }), /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: onSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxs(\"select\", {\n        name: \"curriculum\",\n        \"data-msg\": \"\\uD6C8\\uB828\\uC9C1\\uC885\\uC740\",\n        className: \"authInput\",\n        value: inputBox.curriculum,\n        onChange: onChangInputBox,\n        \"data-size\": \"2\",\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"NONE\",\n          children: \"\\uD6C8\\uB828\\uC9C1\\uC885\\uC120\\uD0DD\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"\\uC751\\uC6A9SW3\\uD68C\\uCC28\",\n          children: \"\\uC751\\uC6A9SW\\uC5D4\\uC9C0\\uB2C8\\uC5B4\\uB9C1 3\\uD68C\\uCC28\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"SpringMVC\",\n          children: \"SpringMVC\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"Java_Python\",\n          children: \"\\uC790\\uBC14&\\uD30C\\uC774\\uC36C\"\n        })]\n      }), authError.curriculum && /*#__PURE__*/_jsx(\"span\", {\n        className: \"authError\",\n        children: authError.curriculum\n      }), /*#__PURE__*/_jsx(\"input\", {\n        name: \"email\",\n        \"data-msg\": \"\\uC774\\uBA54\\uC77C\\uC740\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: inputBox.email,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }), authError.email && /*#__PURE__*/_jsx(\"span\", {\n        className: \"authError\",\n        children: authError.email\n      }), /*#__PURE__*/_jsx(\"input\", {\n        name: \"userName\",\n        \"data-msg\": \"\\uC774\\uB984\\uC740\",\n        type: \"text\",\n        placeholder: \"\\uC774\\uB984\",\n        value: inputBox.userName,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }), authError.userName && /*#__PURE__*/_jsx(\"span\", {\n        className: \"authError\",\n        children: authError.userName\n      }), /*#__PURE__*/_jsx(\"input\", {\n        name: \"phone\",\n        \"data-msg\": \"\\uC804\\uD654\\uBC88\\uD638\\uB294\",\n        type: \"phone\",\n        placeholder: \"010-1111-1111\",\n        value: inputBox.phone,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }), authError.phone && /*#__PURE__*/_jsx(\"span\", {\n        className: \"authError\",\n        children: authError.phone\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"submit\",\n        className: \"authInput authSubmit\",\n        value: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      })]\n    })]\n  });\n};\n\nexport default AuthForm;","map":null,"metadata":{},"sourceType":"module"}