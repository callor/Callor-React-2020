{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\callor\\\\Documents\\\\workspace\\\\React_Project\\\\react-2020\\\\react-900-counseling\\\\components\\\\JoinForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, memo, useCallback } from \"react\";\nimport axios from \"axios\";\nconst TextInput = /*#__PURE__*/memo(({\n  value,\n  onChange,\n  name,\n  type,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    name: name,\n    value: value,\n    required: true,\n    onChange: onChange,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n});\n\nconst useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst AuthForm = () => {\n  const {\n    0: authError,\n    1: setAuthError\n  } = useState({\n    curriculum: \"\",\n    userName: \"\",\n    email: \"\",\n    phone: \"\"\n  });\n  const {\n    0: inputBox,\n    1: setInputBox\n  } = useState({\n    uerName: \"\",\n    phone: \"\",\n    email: \"\",\n    curriculum: \"NONE\"\n  });\n  const onChangInputBox = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputBox(_objectSpread(_objectSpread({}, inputBox), {}, {\n      [name]: value\n    }));\n    const msg = e.target.dataset.msg;\n    setAuthError(_objectSpread(_objectSpread({}, authError), {}, {\n      [name]: value === \"NONE\" || !value ? `${msg} 반드시 입력(선택) 해야 합니다` : \"\"\n    }));\n  }, [inputBox]);\n\n  const onSubmit = async event => {\n    console.log(event);\n    event.preventDefault();\n\n    try {\n      setAuthError({\n        curriculum: inputBox.curriculum === \"NONE\" ? \"직종을 선택하세요\" : \"\",\n        email: !inputBox.email ? \"E-mail을 입력하세요\" : \"\",\n        userName: !inputBox.userName ? \"이름을 입력하세요\" : \"\",\n        phone: !inputBox.phone ? \"휴대폰 번호를 입력하세요\" : \"\"\n      });\n      const body_data = {\n        st_curriculum: inputBox.curriculum,\n        st_name: inputBox.userName,\n        st_tel: inputBox.phone,\n        st_email: inputBox.email\n      };\n      console.log(body_data);\n      /**\r\n       * axios를 사용하여 spring api post로 데이터 전송하기\r\n       * 두번째 파라메터를 null로 선언하고\r\n       * params객체에 json 데이터를 담아서 보낸다\r\n       *\r\n       * spring에서는 vo에 데이터를 받으면 된다.\r\n       */\n\n      axios.post(\"https://api.callor.com/student/insert\", null, {\n        params: body_data\n      }).then(res => {\n        if (res.data) {\n          alert(res.data.st_name + \"님 환영합니다!!!\");\n        }\n      }).catch(error => console.log(error));\n    } catch (error) {\n      alert(error.message);\n      setAuthError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD55C\\uAD6D\\uACBD\\uC601\\uC6D0 \\uC778\\uC7AC\\uAC1C\\uBC1C\\uC6D0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"curriculum\",\n        \"data-msg\": \"\\uD6C8\\uB828\\uC9C1\\uC885\\uC740\",\n        className: \"authInput\",\n        value: inputBox.curriculum,\n        onChange: onChangInputBox,\n        \"data-size\": \"2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NONE\",\n          children: \"\\uD6C8\\uB828\\uC9C1\\uC885\\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SpringMVC\",\n          children: \"SpringMVC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Java_Python\",\n          children: \"\\uC790\\uBC14&\\uD30C\\uC774\\uC36C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), authError.curriculum && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: authError.curriculum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        \"data-msg\": \"\\uC774\\uBA54\\uC77C\\uC740\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: inputBox.email,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), authError.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: authError.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userName\",\n        \"data-msg\": \"\\uC774\\uB984\\uC740\",\n        type: \"text\",\n        placeholder: \"\\uC774\\uB984\",\n        value: inputBox.userName,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), authError.userName && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: authError.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        \"data-msg\": \"\\uC804\\uD654\\uBC88\\uD638\\uB294\",\n        type: \"phone\",\n        placeholder: \"\\uC804\\uD654\\uBC88\\uD638\",\n        value: inputBox.phone,\n        onChange: onChangInputBox,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), authError.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"authError\",\n        children: authError.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"authInput authSubmit\",\n        value: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["C:/Users/callor/Documents/workspace/React_Project/react-2020/react-900-counseling/components/JoinForm.jsx"],"names":["React","useState","memo","useCallback","axios","TextInput","value","onChange","name","type","className","useInput","initValue","setter","handler","e","target","AuthForm","authError","setAuthError","curriculum","userName","email","phone","inputBox","setInputBox","uerName","onChangInputBox","msg","dataset","onSubmit","event","console","log","preventDefault","body_data","st_curriculum","st_name","st_tel","st_email","post","params","then","res","data","alert","catch","error","message"],"mappings":"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","sourcesContent":["import React, { useState, memo, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TextInput = memo(({ value, onChange, name, type, className }) => {\r\n  return <input type={type} name={name} value={value} required onChange={onChange} className={className} />;\r\n});\r\n\r\nconst useInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n};\r\n\r\nconst AuthForm = () => {\r\n  const [authError, setAuthError] = useState({\r\n    curriculum: \"\",\r\n    userName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const [inputBox, setInputBox] = useState({\r\n    uerName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    curriculum: \"NONE\",\r\n  });\r\n\r\n  const onChangInputBox = useCallback(\r\n    (e) => {\r\n      const { name, value } = e.target;\r\n      setInputBox({\r\n        ...inputBox,\r\n        [name]: value,\r\n      });\r\n      const msg = e.target.dataset.msg;\r\n      setAuthError({\r\n        ...authError,\r\n        [name]: value === \"NONE\" || !value ? `${msg} 반드시 입력(선택) 해야 합니다` : \"\",\r\n      });\r\n    },\r\n    [inputBox]\r\n  );\r\n\r\n  const onSubmit = async (event) => {\r\n    console.log(event);\r\n    event.preventDefault();\r\n    try {\r\n      setAuthError({\r\n        curriculum: inputBox.curriculum === \"NONE\" ? \"직종을 선택하세요\" : \"\",\r\n        email: !inputBox.email ? \"E-mail을 입력하세요\" : \"\",\r\n        userName: !inputBox.userName ? \"이름을 입력하세요\" : \"\",\r\n        phone: !inputBox.phone ? \"휴대폰 번호를 입력하세요\" : \"\",\r\n      });\r\n      const body_data = {\r\n        st_curriculum: inputBox.curriculum,\r\n        st_name: inputBox.userName,\r\n        st_tel: inputBox.phone,\r\n        st_email: inputBox.email,\r\n      };\r\n\r\n      console.log(body_data);\r\n\r\n      /**\r\n       * axios를 사용하여 spring api post로 데이터 전송하기\r\n       * 두번째 파라메터를 null로 선언하고\r\n       * params객체에 json 데이터를 담아서 보낸다\r\n       *\r\n       * spring에서는 vo에 데이터를 받으면 된다.\r\n       */\r\n      axios\r\n        .post(\"https://api.callor.com/student/insert\", null, { params: body_data })\r\n        .then((res) => {\r\n          if (res.data) {\r\n            alert(res.data.st_name + \"님 환영합니다!!!\");\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setAuthError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <h3>한국경영원 인재개발원</h3>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <select name=\"curriculum\" data-msg=\"훈련직종은\" className=\"authInput\" value={inputBox.curriculum} onChange={onChangInputBox} data-size=\"2\">\r\n          <option value=\"NONE\">훈련직종선택</option>\r\n          <option value=\"SpringMVC\">SpringMVC</option>\r\n          <option value=\"Java_Python\">자바&파이썬</option>\r\n        </select>\r\n        {authError.curriculum && <span className=\"authError\">{authError.curriculum}</span>}\r\n\r\n        <input name=\"email\" data-msg=\"이메일은\" type=\"email\" placeholder=\"Email\" value={inputBox.email} onChange={onChangInputBox} className=\"authInput\" />\r\n        {authError.email && <span className=\"authError\">{authError.email}</span>}\r\n\r\n        <input name=\"userName\" data-msg=\"이름은\" type=\"text\" placeholder=\"이름\" value={inputBox.userName} onChange={onChangInputBox} className=\"authInput\" />\r\n        {authError.userName && <span className=\"authError\">{authError.userName}</span>}\r\n\r\n        <input name=\"phone\" data-msg=\"전화번호는\" type=\"phone\" placeholder=\"전화번호\" value={inputBox.phone} onChange={onChangInputBox} className=\"authInput\" />\r\n        {authError.phone && <span className=\"authError\">{authError.phone}</span>}\r\n\r\n        <input type=\"submit\" className=\"authInput authSubmit\" value=\"등록하기\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}